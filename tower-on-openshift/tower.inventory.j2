localhost ansible_connection=local ansible_python_interpreter="/usr/bin/env python"

[all:vars]

# This will create or update a default admin (superuser) account in Tower
admin_user=admin
admin_password='redhat'

# Tower Secret key
# It's *very* important that this stay the same between upgrades or you will lose
# the ability to decrypt your credentials
secret_key='verysecretkey'

# Database Settings
# =================

# Set pg_hostname if you have an external postgres server, otherwise
# a new postgres service will be created
{% if db_type == "extern" %}
pg_hostname=pgawx
{% else %}
#pg_hostname=pgawx
{% endif %}

# If using an external database, provide your existing credentials.
# If you choose to use the provided containerized Postgres depolyment, these
# values will be used when provisioning the database.
pg_username='awx'
pg_password='pgredhat'
pg_database='awxdb'
pg_port=5432

rabbitmq_password='rmqredhat'
rabbitmq_erlang_cookie='rmqcookie'

# Note: The user running this installer will need cluster-admin privileges.
# Tower's job execution container requires running in privileged mode,
# and a service account must be created for auto peer-discovery to work.

# Deploy into Openshift
# =====================

openshift_host=https://tower-ocp.ewl.example.com:8443
openshift_skip_tls_verify=true
openshift_project=myproject
openshift_user=admin
openshift_password=redhat

# If you don't want to hardcode a password here, just do:
# ./setup_openshift.sh -e openshift_token=$TOKEN

# Skip this section if you BYO database. This is only used when you want the installer to deploy
# a containerized Postgres deployment inside of your OpenShift cluster.
# This is only recommended if you have experience storing and managing persistent
# data in containerized environments.
#
# Name of a PVC you've already provisioned for database:
{% if db_type == "intern" %}
openshift_pg_pvc_name=postgresql-pvc
{% else %}
# openshift_pg_pvc_name=postgresql-pvc
{% endif %}
#
# Or... use an emptyDir volume for the OpenShift Postgres pod.
# Useful for demos or testing purposes.
{% if db_type == "empty" %}
openshift_pg_emptydir=true
{% else %}
# openshift_pg_emptydir=false
{% endif %}

# Deploy into Vanilla Kubernetes
# ==============================

# kubernetes_context=test-cluster
# kubernetes_namespace=tower

# reduce (or increase) the memory and CPU size required
task_cpu_request=1000
task_mem_request=1
